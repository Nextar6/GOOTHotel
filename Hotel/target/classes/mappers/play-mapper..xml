<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.spring.hotel.PlayMapper">

	<insert id="insert">
		insert into ${play} (${playTitle},
		${playContent},
		${playPic}, ${playBookDate},
		${memberUserid},
		${playPrice})
		values (#{playTitle},
		#{playContent}, #{playPic},
		#{playBookDate},
		#{memberUserid}, #{playPrice})
	</insert>

	<select id="select_all" resultType="PlayVO">
		select * from ${play}
		order by
		${playNo} desc
	</select>

	<select id="select_by_play_no" resultType="PlayVO">
		select * from
		${play}
		where ${playNo} = #{playNo}
	</select>


	<select id="paging" resultType="PlayVO">
		select b.${playNo},
		b.${playTitle}, b.${playBookDate},
		b.${playContent}, b.${playPic},
		b.${memberUserid}, b.${playBookDate},
		b.${playReplyCount},
		b.${playCdate}, b.${playPrice}
		from(
		select rownum rn,
		a.* from(
		select * from ${play}
		order by
		${playNo}
		desc
		)a
		)b where rn
		between #{start} and #{end}
	</select>

	<select id="total_count" resultType="Integer">
		select count(*) total_cnt
		from ${play}
	</select>

	<update id="update">

		update ${play}
		set
		${playTitle} = #{playTitle},
		${playContent} = #{playContent}
			, ${playPic} = #{playPic}

		where
		${playNo} = #{playNo}

	</update>

	<delete id="delete">
		delete from ${play} where ${playNo} = #{playNo}

	</delete>
	
	<update id="update_reply_count">
	   	update ${play}
	   	set ${playReplyCount} = ${playReplyCount} + #{amount}
	   	where ${playNo} = #{playNo}
	   </update>
	   
	   <!-- 리뷰에서 like 가져와서 평점 저장 -->
	   <update id="update_like_count">
	   	update ${play}
	   	set ${playLikeCount} = ${playLikeCount} + #{amount}
	   	where ${playNo} = #{playNo}
	   </update>
	   
	 <!-- 댓글 많은순 정렬 -->
	 	<select id="order_by_reply" resultType="PlayVO">
		select b.${playNo},
		b.${playTitle}, b.${playBookDate},
		b.${playContent}, b.${playPic},
		b.${memberUserid}, b.${playBookDate},
		b.${playReplyCount}, 
		b.${playCdate}, b.${playPrice}
		from(
		select rownum rn,
		a.* from(
		select * from ${play}
		order by
		${playReplyCount}
		desc
		)a
		)b where rn
		between #{start} and #{end}
	</select>
	
	<!-- 가격순 정렬 -->
	<select id="order_by_price" resultType="PlayVO">
		select b.${playNo},
		b.${playTitle}, b.${playBookDate},
		b.${playContent}, b.${playPic},
		b.${memberUserid}, b.${playBookDate},
		b.${playReplyCount}, 
		b.${playCdate}, b.${playPrice}
		from(
		select rownum rn,
		a.* from(
		select * from ${play}
		order by
		${playPrice}
		<if test="keyword.equals('max')">
		desc
		</if>
		<if test="keyword.equals('min')">
		asc
		</if>	
		)a
		)b where rn
		between #{start} and #{end}
	</select>
	
	<!-- 인기순 ( 평점순 으로 정렬 ) -->
	
	 	<select id="order_by_like" resultType="PlayVO">
		select b.${playNo},
		b.${playTitle}, b.${playBookDate},
		b.${playContent}, b.${playPic},
		b.${memberUserid}, b.${playBookDate},
		b.${playReplyCount}, b.${playLikeCount},
		b.${playCdate}, b.${playPrice}
		from(
		select rownum rn,
		a.* from(
		select * from ${play}
		order by
		${playLikeCount}
		desc
		)a
		)b where rn
		between #{start} and #{end}
	</select>


</mapper>